server.port=8081

## It contains a list of host/port pairs for establishing the initial connection to the Kafka cluster.
## You can have multiple bootstrap-servers in your producer or consumer configuration. 
## So that if one of the broker is not accessible, then it falls back to other.
## This servers list should be in the form host1:port1,host2:port2,....
spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id = email

## The decision on whether to consume from the beginning of a topic partition or 
## to only consume new messages when there is no initial offset for the consumer group 
## is controlled by the auto.offset.reset configuration parameter on the Kafka Consumer.
## earliest: consume from the begining
## latest: consume from the end means latest messages
## none: throw exception if offset not present
spring.kafka.consumer.auto-offset-reset = earliest

spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer

## specifies the comma-delimited list of package patterns allowed for deserialization. 
## '*' means deserializing all the packages.
spring.kafka.consumer.properties.spring.json.trusted.packages = *
spring.kafka.topic.name = order_topics
